version: '3.8'

services:
  # Database
  db:
    image: postgres:13-alpine
    container_name: coupon_db
    environment:
      POSTGRES_DB: coupon_system
      POSTGRES_USER: coupon_user
      POSTGRES_PASSWORD: coupon_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - coupon_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coupon_user -d coupon_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: coupon_backend
    environment:
      FLASK_APP: run.py
      FLASK_ENV: production
      DATABASE_URL: postgresql://coupon_user:coupon_password@db:5432/coupon_system
      SECRET_KEY: your-secret-key-here
      JWT_SECRET_KEY: your-jwt-secret-key-here
      MAIL_SERVER: smtp.gmail.com
      MAIL_PORT: 587
      MAIL_USE_TLS: true
      MAIL_USERNAME: your-email@gmail.com
      MAIL_PASSWORD: your-app-password
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - coupon_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coupon_frontend
    volumes:
      - uploads_data:/usr/share/nginx/html/uploads
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - coupon_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions)
  redis:
    image: redis:6-alpine
    container_name: coupon_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - coupon_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: coupon_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - uploads_data:/usr/share/nginx/html/uploads
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - backend
    networks:
      - coupon_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  coupon_network:
    driver: bridge
